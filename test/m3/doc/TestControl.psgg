;PSGG Editor Backup File
version=1.1
file=TestControl.xlsx
guid=c0856262-0e48-4255-9b0b-b7b57e901608
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n005,,n006,n007,,n008,n009,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,n014,,n015,n016,n017,,
stateid_list=,,,,s0001,s0002,s0003,s0004,s0005,s0006,s0007,s0008,s0009,s000a,s000b,,s000c
max_name_id=24
max_state_id=12
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embdec
n007=embed
n008=vars
n009=init
n00a=init-cmt
n00b=init-ref
n00c=update
n00d=update-cmt
n00e=wait
n00f=wait-cmt
n010=post_wait
n011=post_wait-cmt
n012=branch
n013=brcond
n014=nowait
n015=!dir
n016=!pos
n017=!uuid


[id_state_dic]
s0001=S_START
s0002=S_END
s0003=E_0001
s0004=S_0002
s0005=S_0003
s0006=S_0004
s0007=S_0005
s0008=S_0006
s0009=S_0007
s000a=S_0008
s000b=S_0009
s000c=E_0002


[s0001]
n002=S_START
n005=S_0002
n015=@@@
/
(100,100)
This is the root
@@@

n016=50,100
n017=100001

[s0002]
n002=S_END
n015=@@@
/
(100,100)
This is the root
@@@

n016=926,237
n017=100002

[s0003]
n001=(bitmap)
n002=E_0001
n006=@@@
protected procedure hoge(const st: string);
@@@

n007=@@@
procedure TestControl.hoge(const st: string);
begin
    WriteLn('Hoge ! ' + st);
end;
@@@

n015=@@@
/
(100,100)
This is the root
@@@

n016=27,250
n017=100003

[s0004]
n001=(bitmap)
n002=S_0002
n005=S_0003
n009=hoge('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=254,46
n017=100004

[s0005]
n001=(bitmap)
n002=S_0003
n003=
n008=@@@
var
    a : integer;
@@@

n009=a:=3;
n012=@@@
brifc(S_0004);
brelseifc(S_0006);
brelse(S_0005);
@@@

n013=@@@
a=1
a=2
?
@@@

n015=@@@
/
(100,100)

@@@

n016=247,201
n017=100005

[s0006]
n001=(bitmap)
n002=S_0004
n003=
n005=S_END
n009=WriteLn('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=539,31
n017=100006

[s0007]
n001=(bitmap)
n002=S_0005
n003=
n005=S_0007
n009=WriteLn('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=460,367
n017=100007

[s0008]
n001=(bitmap)
n002=S_0006
n003=
n005=S_END
n009=WriteLn('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=531,199
n017=100008

[s0009]
n001=(bitmap)
n002=S_0007
n003=
n009=fbYesNo := True;
n012=@@@
brifc(S_0008);
brelse(S_0009);
@@@

n013=@@@
fbYesNo
?
@@@

n015=@@@
/
(100,100)

@@@

n016=335,528
n017=100009

[s000a]
n001=(bitmap)
n002=S_0008
n003=
n005=S_END
n009=WriteLn('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=654,512
n017=100010

[s000b]
n001=(bitmap)
n002=S_0009
n003=
n005=S_END
n009=WriteLn('[[state]]');
n015=@@@
/
(100,100)

@@@

n016=651,674
n017=100011

[s000c]
n002=E_0002
n006=public fbYesNo : boolean;
n015=@@@
/
(100,100)

@@@

n016=31,452
n017=100012



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2020/07/18 21:41:51
; * pssgEditor version : 0.65.30181.c1f731a61c084a50af056af301b5a2c33505b45f
psggfile=@@@
TestControl.psgg
@@@
xlsfile=@@@
TestControl.xlsx
@@@
guid=@@@
c0856262-0e48-4255-9b0b-b7b57e901608
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
init,Saved
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"This is the root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":50,"y":100}},{"Key":"S_END","Value":{"x":926,"y":237}},{"Key":"E_0001","Value":{"x":27,"y":250}},{"Key":"S_0002","Value":{"x":254,"y":46}},{"Key":"S_0003","Value":{"x":247,"y":201}},{"Key":"S_0004","Value":{"x":539,"y":31}},{"Key":"S_0005","Value":{"x":460,"y":367}},{"Key":"S_0006","Value":{"x":531,"y":199}},{"Key":"S_0007","Value":{"x":335,"y":528}},{"Key":"S_0008","Value":{"x":654,"y":512}},{"Key":"S_0009","Value":{"x":651,"y":674}},{"Key":"E_0002","Value":{"x":31,"y":452}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BTN_BY.\\("}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=0
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=4
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@

@@@
decoimage_typ_name=@@@
sym
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>

<<<?state/^E_/
<<<?embedc
>>>
<<<?embed
{
  [[state]]
  [[state-cmt]]
}
[[embed]]
eof>>>
eof>>>


{
    [[state]]
    [[state-cmt]]
}
procedure TestControl.[[state]](const bFirst : boolean);
[[vars]]
begin
    <<<?init
    if bFirst=true then begin
        [[init]]
    end;
    >>>

    [[update]]

    <<<?wait
    if [[wait]] = false then exit;
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if HasNextState() = false then begin
        SetNextState('[[nextstate]]');
    end;
    >>>

    if HasNextState() = true then begin
        <<<?nowait
        NoWait();
        >>>
        GoNextState();
    end;
end;
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=TestControl.psgg
xls=TestControl.xlsx
sub_src=
gen_src=TestControlUnit.pas

manager_src=StateManagerUnit.pas
manager_dir=base

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=helpweb.html

[setupinfo]

lang=delphi
framework=

statemachie=TestControl
prefix=__PREFIX__
xlsdir=C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\doc
gendir=C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\src
genrdir=..\src
incrdir=.

code_output_start=[STATEGO OUTPUT START]
code_output_end=[STATEGO OUTPUT END]

[macro]
; This section has macro defines for converting.

; commentline format  {%0} will be replaced to a comment.
commentline=// {%0}

#declare=@@@
protected procedure [[state]](const bFirst : boolean);
@@@

#declare_f=@@@
[[embedf]]
@@@

#exec=@@@
if st = '[[state]]' then begin [[state]](bFirst); goto end_proc;  end;
@@@

@branch=@@@
<<<?"{%0}"/^brif$/
if [[brcond:{%N}]] then begin
    SetNextState('{%1}');
end;
>>>
<<<?"{%0}"/^brifc$/
if [[brcond:{%N}]] then begin
    SetNextState('{%1}');
end
>>>
<<<?"{%0}"/^brelseif$/
else if [[brcond:{%N}]] then begin
    SetNextState('{%1}');
end;
>>>
<<<?"{%0}"/^brelseifc$/
else if [[brcond:{%N}]] then begin
    SetNextState('{%1}');
end
>>>
<<<?"{%0}"/^brelse$/
else begin
    SetNextState('{%1}');
end;
>>>
<<<?"{%0}"/^br_/
{%0}('{%1}');
>>>
@@@

#embdec=@@@
[[embdec]]
@@@

[jpn]
title=Delphi スタートキット 2018/10/13

detail=@@@

Delphi 用のステートマシンを作成します。

※サンプルプロジェクトを次のＵＲＬより入手可能。
https://github.com/NNNIC/psgg-delphi-sample


# ドキュメント用フォルダ
   ステート図ファイルとエディタ起動用ショートカットを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\doc

  以下のファイルを作成します。

      TestControl.pssg   --- エディタで次のエクセルファイルを開く。
      TestControl.xlsx   --- ステート図格納用Excelファイル。エディタが編集。

# ソース用フォルダ
　エディタが生成ソースファイル、ユーザ実装ソースファイル、及び管理クラスファイルを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\src

  以下のファイルが作成されます。

      TestControlUnit.pas  --- Excelファイルからの変換ソースコードを挿入。

# 共通管理クラスファイル

　以下に作成されます。

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\src/base/StateManagerUnit.pas

注意 : 既に同名のファイルがある場合は生成されません。
  　　 削除してから生成してください。

@@@


[en]
title=Delphi STARTER KIT 2018/10/13

detail=@@@
This dialog will create files for a state machine.

* You may get the sample project from the below url.
https://github.com/NNNIC/psgg-delphi-sample

# Document Folder
　This folder will contain a state chart file and the shortcut of the editor.

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\doc

  File:

      TestControl.pssg  --- The editor opens the below excel file.
      TestControl.xlsx  --- Excel File that has a state chart. The editor edits this file.

# Source Folder
   This folder will contain a source file generated by the editor, a user implemetation source file, and a manager source file.

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\src

　File:
      TestControlUnit.pas   -- the editor will convert from the excel file into this file.

# Common State Manager Class File

  File:

      C:\Users\gea01\Documents\psgg\samples\psgg-delphi-sample\playground\src/base/StateManagerUnit.pas

NOTE : If the same name files exists, the file will not be created.
       Please delete the same name files ahead of the creation.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[embdec]

jpn=[embed]部の宣言部分。
en=declare parg of [embed].
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[update]

jpn=更新処理を指定する。
en=Specify a update process.
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[embedf]

en=Declear field member
jpn=フィールド部の宣言用
[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[vars]

jpn=
en=
[embed]

jpn=組込みソース。
en=embed source.
[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'yes'を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'yes' if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
state-ref=
wait=
wait-cmt=
embed=
branch=
!dir=
post_wait-cmt=
state-cmt=
nowait=@@@
*select
nowait
@@@

thumbnail=
embdec=
update-cmt=
post_wait=
vars=
!pos=
!uuid=
embedf=
nextstate=
state=
S_=
brcond=
update=
init-cmt=
C_=
E_=
init-ref=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,S0
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
basestate=read_only,share,S.+
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


